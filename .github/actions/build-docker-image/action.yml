name: build-docker-image
description: Build a docker image from a multitarget dockerfile.
inputs:
  target:
    description: The name of the target image from the Dockerfile.
    required: true
  base-image:
    description: "The name of a base-image artifact to use to build"
  environment:
    description: The environment passed in
    default: production
  repo:
    description: The image repo we're trying to build for
  latest-tag:
    description: The tag for latest
  version:
    description: The semantic version
    default: "1.0"
runs:
  using: composite
  steps:
    - shell: bash
      id: build-tags
      if: ${{ inputs.repo }}
      run: |
        IMAGE="${{ inputs.repo }}/${{ inputs.artifact }}"
        echo 'tags<<EOF' >> $GITHUB_OUTPUT
        echo "${IMAGE}:${{ inputs.latest-tag }}" >> $GITHUB_OUTPUT
        echo "${IMAGE}:${{ inputs.version }}.${{ github.run_id }}-${{ inputs.environment }}" >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT
    - uses: actions/checkout@v3
    - if: ${{ inputs.base-image }}
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.base-image }}
        path: /tmp
    - if: ${{ inputs.base-image }}
      shell: bash
      run: |
        docker load --input /tmp/${{ inputs.base-image }}.tar
        docker image ls -a
    - uses: docker/setup-buildx-action@v2
      id: builder
    - uses: docker/build-push-action@v4
      with:
        builder: ${{ steps.builder.outputs.name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: .
        outputs: type=docker,dest=/tmp/${{ inputs.target }}.tar
        push: false
        target: ${{ inputs.target }}
        tags: |
          ${{ steps.build-tags.outputs.tags }}
    - uses: actions/upload-artifact@v3
      with:
       name: ${{ inputs.target }}
       path: /tmp/${{ inputs.target }}.tar