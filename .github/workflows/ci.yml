name: CI
on:
  push:
jobs:
  lint:
    if: ${{ 1 == 2 }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast:  false
      matrix: 
        linter: ["ruff", "black", "prettier"]
    name: ${{ matrix.linter }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/mega-lint
        with:
          linter: ${{ matrix.linter }}
          action: check
  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: ruff
        continue-on-error: true
        name: format ruff
        uses: ./.github/actions/mega-lint
        with:
          linter: ruff
          action: format
      - id: black
        continue-on-error: true
        name: format black
        uses: ./.github/actions/mega-lint
        with: 
          linter: black
          action: format
      - id: prepare
        run: |
          CHANGES=$(git status -s | wc -l )
          REMAINING=$(sed -e 's/^[[:space:]]*,*/[/' -e 's/,,*/,/g' -e 's/,*$/]/' <<-EOF
          ${{ join(steps.*.outputs.remaining) }}
          EOF
          );

          echo changes=${CHANGES} >> $GITHUB_OUTPUT
          echo remaining=$(echo ${REMAINING} | jq 'add') >> $GITHUB_OUTPUT
          echo 'commit-message<<EOF' >> $GITHUB_OUTPUT
          echo '${{ inputs.commit-message-header }}' >> $GITHUB_OUTPUT
          echo >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      - uses: ./.github/actions/test-runner
        with:
          suite: python
          cache-path: .venv
          cache-hash-pattern: "**/poetry.lock"
      - if: ${{ always() && !failure() && steps.prepare.outputs.changes >= 1 }} 
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_user_name: "[bot] rosie"
          commit_user_email: "rosie@drill.run"
          commit_message: ${{ steps.prepare.outputs.commit-message }}
      - if: ${{ steps.prepare.outputs.changes >= 1 }}
        run: /bin/false
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        suite: 
          - name: "python"
            cache:
              path: .venv
              hash-pattern: "**/poetry.lock"
          - name: "node"
            cache:
              path: .front-end/node_modules/
              hash-pattern: "**/yarn.lock"
    name: ${{ matrix.suite.name }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test-runner
        with:
          suite: ${{ matrix.suite.name }}
          cache-path: ${{ matrix.suite.cache.path }}
          cache-hash-pattern: ${{ matrix.suite.cache.hash-pattern }}
  build:
    runs-on: ubuntu-latest
    needs: [lint, format, test]
    if: ${{ always() && !failure('lint') && !failure('test') }}
    steps:
      - run: echo "BUILD TIME!"

